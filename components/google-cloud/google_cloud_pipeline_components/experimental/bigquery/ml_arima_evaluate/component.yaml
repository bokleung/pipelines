# Copyright 2021 The Kubeflow Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: bigquery_evaluate_model_job
description: |
  Launch a BigQuery ML.ARIMA_EVALUATE job and waits for it to finish.
    Args:
        project (str):
            Required. Project to run BigQuery model evaluation job.
        location (Optional[str]):
            Location to run the BigQuery model evaluation job. If not set,
            default to `US` multi-region.
            For more details, see https://cloud.google.com/bigquery/docs/locations#specifying_your_location
        model (google.BQMLModel):
            Required. BigQuery ML model for ML.ARIMA_EVALUATE.
            For more details, see https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-arima-evaluate#model_name
        show_all_candidate_models (Optional[bool]):
            You can use show_all_candidate_models to show evaluation metrics or an error message
            for either all candidate models or for only the best model with the lowest AIC. The
            value is type BOOL and is part of the settings STRUCT.
            For more details, see https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-arima-evaluate#show_all_candidate_models
    Returns:
        arima_evaluation_metrics (system.Artifact):
          Describes arima metrics.
          For more details, see https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-arima-evaluate#mlarima_evaluate_output
        gcp_resources (str):
            Serialized gcp_resources proto tracking the BigQuery job.
            For more details, see https://github.com/kubeflow/pipelines/blob/master/components/google-cloud/google_cloud_pipeline_components/proto/README.md.
inputs:
  - { name: project, type: String }
  - { name: location, type: String, default: "us-central1" }
  - { name: model, type: google.BQMLModel }
  - { name: show_all_candidate_models, type: Boolean, optional: true, default: "false" }
  - { name: query_parameters, type: JsonArray, optional: true, default: '[]' }
  - { name: job_configuration_query, type: JsonObject, optional: true, default: '{}'}
outputs:
  - { name: arima_evaluation_metrics, type: system.Artifact }
  - { name: gcp_resources, type: String }
implementation:
  container:
    image: gcr.io/ml-pipeline/google-cloud-pipeline-components:latest
    command:
      [
        python3,
        -u,
        -m,
        google_cloud_pipeline_components.container.v1.gcp_launcher.launcher,
      ]
    args:
      [
        --type,
        BigqueryMLArimaEvaluateJob,
        --project,
        { inputValue: project },
        --location,
        { inputValue: location },
        --model_name,
        concat:
          [
            "{{$.inputs.artifacts['model'].metadata['projectId']}}",
            ".",
            "{{$.inputs.artifacts['model'].metadata['datasetId']}}",
            ".",
            "{{$.inputs.artifacts['model'].metadata['modelId']}}",
          ],
        --show_all_candidate_models,
        { inputValue: show_all_candidate_models },
        --payload,
        concat: [
            '{',
              '"configuration": {',
                '"query": ', {inputValue: job_configuration_query},
                ', "labels": ', {inputValue: labels},
              '}',
            '}'
        ],
        --job_configuration_query_override,
        concat: [
            '{',
              '"query_parameters": ', {inputValue: query_parameters},
              ', "destination_encryption_configuration": {',
              '"kmsKeyName": "', {inputValue: encryption_spec_key_name}, '"}',
            '}'
        ],
        --gcp_resources,
        { outputPath: gcp_resources },
        --executor_input,
        "{{$}}",
      ]
